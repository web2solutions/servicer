{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1","program":"/Users/admin/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","http_body","--edition=2018","/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=6081c3c9ea5bea6b","-C","extra-filename=-6081c3c9ea5bea6b","--out-dir","/Users/admin/apps/servicer/target/rls/debug/deps","-L","dependency=/Users/admin/apps/servicer/target/rls/debug/deps","--extern","bytes=/Users/admin/apps/servicer/target/rls/debug/deps/libbytes-daf559f06673de9a.rmeta","--extern","http=/Users/admin/apps/servicer/target/rls/debug/deps/libhttp-9a7f60985445019d.rmeta","--extern","pin_project_lite=/Users/admin/apps/servicer/target/rls/debug/deps/libpin_project_lite-f3111b7dc2d5fa69.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/admin/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/admin/apps/servicer/target/rls/debug/deps/libhttp_body-6081c3c9ea5bea6b.rmeta"},"prelude":{"crate_id":{"name":"http_body","disambiguator":[10121304267143955359,15233330884969597448]},"crate_root":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src","external_crates":[{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[16125995874279485955,8748768413821387129]}},{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/next.rs","num":2,"id":{"name":"core","disambiguator":[16348493018826829365,4805211970644213659]}},{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8279628881989909837,14733107812838978533]}},{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17646096667663791084,12272231044852301253]}},{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4565760717972533866,4473905522437311200]}},{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7551666766599439458,2782226154556471377]}},{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11632633256475535999,13776501019579249840]}},{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4897607742433192731,640426136460610934]}},{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[15534826887064733014,5612939005974764181]}},{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1175232612468424282,18163295741730709113]}},{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[15721596154046543409,2249662874474360977]}},{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[7768511099061914688,4128344505014859734]}},{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[15048206832849992118,3387758009953732431]}},{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[13751153714556823430,9887373550715096268]}},{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[13432701172845674020,17161827416142858739]}},{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/empty.rs","num":16,"id":{"name":"bytes","disambiguator":[427252707745061649,7442109269039126305]}},{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/empty.rs","num":17,"id":{"name":"http","disambiguator":[12520990344028804261,2436469874761710211]}},{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/empty.rs","num":18,"id":{"name":"fnv","disambiguator":[9430605329771513137,16115088239152320056]}},{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/empty.rs","num":19,"id":{"name":"itoa","disambiguator":[4541648818081574197,790060098668554130]}},{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/map_data.rs","num":20,"id":{"name":"pin_project_lite","disambiguator":[17138296725693297655,12935265382682820746]}}],"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":0,"byte_end":7180,"line_start":1,"line_end":279,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":74},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/mod.rs","byte_start":11674,"byte_end":11681,"line_start":7,"line_end":7,"column_start":26,"column_end":33},"alias_span":null,"name":"BoxBody","value":"","parent":{"krate":0,"index":64}},{"kind":"Use","ref_id":{"krate":0,"index":258},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/mod.rs","byte_start":11693,"byte_end":11700,"line_start":7,"line_end":7,"column_start":45,"column_end":52},"alias_span":null,"name":"MapData","value":"","parent":{"krate":0,"index":64}},{"kind":"Use","ref_id":{"krate":0,"index":314},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/mod.rs","byte_start":11711,"byte_end":11717,"line_start":7,"line_end":7,"column_start":63,"column_end":69},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":64}},{"kind":"Use","ref_id":{"krate":0,"index":15},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":410,"byte_end":415,"line_start":22,"line_end":22,"column_start":22,"column_end":27},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":224},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":438,"byte_end":442,"line_start":23,"line_end":23,"column_start":22,"column_end":26},"alias_span":null,"name":"Data","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":225},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":438,"byte_end":442,"line_start":23,"line_end":23,"column_start":22,"column_end":26},"alias_span":null,"name":"Data","value":"","parent":{"krate":0,"index":154}},{"kind":"Use","ref_id":{"krate":0,"index":233},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":444,"byte_end":452,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"alias_span":null,"name":"Trailers","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":234},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":444,"byte_end":452,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"alias_span":null,"name":"Trailers","value":"","parent":{"krate":0,"index":155}},{"kind":"Use","ref_id":{"krate":0,"index":242},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":480,"byte_end":488,"line_start":24,"line_end":24,"column_start":26,"column_end":34},"alias_span":null,"name":"SizeHint","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":0,"byte_end":7180,"line_start":1,"line_end":279,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":38},{"krate":0,"index":53},{"krate":0,"index":64},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":433},{"krate":0,"index":155},{"krate":0,"index":435},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":184},{"krate":0,"index":192},{"krate":0,"index":200},{"krate":0,"index":208},{"krate":0,"index":216}],"decl_id":null,"docs":" Asynchronous HTTP request or response body.","sig":null,"attributes":[{"value":"deny(missing_debug_implementations, missing_docs, unreachable_pub,\n       broken_intra_doc_links)","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":59,"byte_end":171,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Asynchronous HTTP request or response body.","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":208,"byte_end":255,"line_start":10,"line_end":10,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":256,"byte_end":259,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ See [`Body`] for more details.","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":260,"byte_end":294,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":295,"byte_end":298,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Body`]: trait.Body.html","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":299,"byte_end":328,"line_start":14,"line_end":14,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":15},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/empty.rs","byte_start":7395,"byte_end":7400,"line_start":13,"line_end":13,"column_start":12,"column_end":17},"name":"Empty","qualname":"::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":17}],"decl_id":null,"docs":" A body that is always empty.\n","sig":null,"attributes":[{"value":"/ A body that is always empty.","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/empty.rs","byte_start":7351,"byte_end":7383,"line_start":12,"line_end":12,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/empty.rs","byte_start":7506,"byte_end":7509,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<Empty<D>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Empty`.\n","sig":null,"attributes":[{"value":"/ Create a new `Empty`.","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/empty.rs","byte_start":7469,"byte_end":7494,"line_start":18,"line_end":18,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":224},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/next.rs","byte_start":8667,"byte_end":8671,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Data","qualname":"::next::Data","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future that resolves to the next data chunk from `Body`\n","sig":null,"attributes":[{"value":"must_use = \"futures don't do anything unless polled\"","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/next.rs","byte_start":8523,"byte_end":8578,"line_start":7,"line_end":7,"column_start":1,"column_end":56}},{"value":"/ Future that resolves to the next data chunk from `Body`","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/next.rs","byte_start":8596,"byte_end":8655,"line_start":9,"line_end":9,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":233},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/next.rs","byte_start":9122,"byte_end":9130,"line_start":23,"line_end":23,"column_start":12,"column_end":20},"name":"Trailers","qualname":"::next::Trailers","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future that resolves to the optional trailers from `Body`\n","sig":null,"attributes":[{"value":"must_use = \"futures don't do anything unless polled\"","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/next.rs","byte_start":8976,"byte_end":9031,"line_start":20,"line_end":20,"column_start":1,"column_end":56}},{"value":"/ Future that resolves to the optional trailers from `Body`","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/next.rs","byte_start":9049,"byte_end":9110,"line_start":22,"line_end":22,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":242},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":9627,"byte_end":9635,"line_start":10,"line_end":10,"column_start":12,"column_end":20},"name":"SizeHint","qualname":"::size_hint::SizeHint","value":"SizeHint {  }","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":244}],"decl_id":null,"docs":" A `Body` size hint","sig":null,"attributes":[{"value":"/ A `Body` size hint","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":9466,"byte_end":9488,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":9489,"byte_end":9492,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The default implementation returns:","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":9493,"byte_end":9532,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":9533,"byte_end":9536,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ * 0 for `lower`","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":9537,"byte_end":9556,"line_start":7,"line_end":7,"column_start":1,"column_end":20}},{"value":"/ * `None` for `upper`.","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":9557,"byte_end":9582,"line_start":8,"line_end":8,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":9775,"byte_end":9778,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"name":"new","qualname":"<SizeHint>::new","value":"pub fn new() -> SizeHint","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `SizeHint` with default values\n","sig":null,"attributes":[{"value":"/ Returns a new `SizeHint` with default values","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":9701,"byte_end":9749,"line_start":16,"line_end":16,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":9754,"byte_end":9763,"line_start":17,"line_end":17,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":9953,"byte_end":9963,"line_start":25,"line_end":25,"column_start":12,"column_end":22},"name":"with_exact","qualname":"<SizeHint>::with_exact","value":"pub fn with_exact(u64) -> SizeHint","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `SizeHint` with both upper and lower bounds set to the\n given value.\n","sig":null,"attributes":[{"value":"/ Returns a new `SizeHint` with both upper and lower bounds set to the","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":9834,"byte_end":9906,"line_start":22,"line_end":22,"column_start":5,"column_end":77}},{"value":"/ given value.","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":9911,"byte_end":9927,"line_start":23,"line_end":23,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":9932,"byte_end":9941,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":10203,"byte_end":10208,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"lower","qualname":"<SizeHint>::lower","value":"pub fn lower(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the lower bound of data that the `Body` will yield before\n completing.\n","sig":null,"attributes":[{"value":"/ Returns the lower bound of data that the `Body` will yield before","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":10088,"byte_end":10157,"line_start":32,"line_end":32,"column_start":5,"column_end":74}},{"value":"/ completing.","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":10162,"byte_end":10177,"line_start":33,"line_end":33,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":10182,"byte_end":10191,"line_start":34,"line_end":34,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":10416,"byte_end":10425,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"set_lower","qualname":"<SizeHint>::set_lower","value":"pub fn set_lower(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Set the value of the `lower` hint.","sig":null,"attributes":[{"value":"/ Set the value of the `lower` hint.","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":10255,"byte_end":10293,"line_start":39,"line_end":39,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":10298,"byte_end":10301,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":10306,"byte_end":10318,"line_start":41,"line_end":41,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":10323,"byte_end":10326,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ The function panics if `value` is greater than `upper`.","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":10331,"byte_end":10390,"line_start":43,"line_end":43,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":10395,"byte_end":10404,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":10693,"byte_end":10698,"line_start":53,"line_end":53,"column_start":12,"column_end":17},"name":"upper","qualname":"<SizeHint>::upper","value":"pub fn upper(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the upper bound of data the `Body` will yield before\n completing, or `None` if the value is unknown.\n","sig":null,"attributes":[{"value":"/ Returns the upper bound of data the `Body` will yield before","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":10548,"byte_end":10612,"line_start":50,"line_end":50,"column_start":5,"column_end":69}},{"value":"/ completing, or `None` if the value is unknown.","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":10617,"byte_end":10667,"line_start":51,"line_end":51,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":10672,"byte_end":10681,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":10918,"byte_end":10927,"line_start":63,"line_end":63,"column_start":12,"column_end":21},"name":"set_upper","qualname":"<SizeHint>::set_upper","value":"pub fn set_upper(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Set the value of the `upper` hint value.","sig":null,"attributes":[{"value":"/ Set the value of the `upper` hint value.","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":10753,"byte_end":10797,"line_start":57,"line_end":57,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":10802,"byte_end":10805,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":10810,"byte_end":10822,"line_start":59,"line_end":59,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":10827,"byte_end":10830,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ This function panics if `value` is less than `lower`.","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":10835,"byte_end":10892,"line_start":61,"line_end":61,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":10897,"byte_end":10906,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":11212,"byte_end":11217,"line_start":72,"line_end":72,"column_start":12,"column_end":17},"name":"exact","qualname":"<SizeHint>::exact","value":"pub fn exact(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the exact size of data that will be yielded **if** the\n `lower` and `upper` bounds are equal.\n","sig":null,"attributes":[{"value":"/ Returns the exact size of data that will be yielded **if** the","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":11074,"byte_end":11140,"line_start":69,"line_end":69,"column_start":5,"column_end":71}},{"value":"/ `lower` and `upper` bounds are equal.","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":11145,"byte_end":11186,"line_start":70,"line_end":70,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":11191,"byte_end":11200,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":11462,"byte_end":11471,"line_start":82,"line_end":82,"column_start":12,"column_end":21},"name":"set_exact","qualname":"<SizeHint>::set_exact","value":"pub fn set_exact(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Set the value of the `lower` and `upper` bounds to exactly the same.\n","sig":null,"attributes":[{"value":"/ Set the value of the `lower` and `upper` bounds to exactly the same.","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":11364,"byte_end":11436,"line_start":80,"line_end":80,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":11441,"byte_end":11450,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":64},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"combinators","qualname":"::combinators","value":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/mod.rs","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":96},{"krate":0,"index":122},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151}],"decl_id":null,"docs":" Combinators for the `Body` trait.\n","sig":null,"attributes":[{"value":"/ Combinators for the `Body` trait.","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/mod.rs","byte_start":11568,"byte_end":11605,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":74},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/box_body.rs","byte_start":11865,"byte_end":11872,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"BoxBody","qualname":"::combinators::box_body::BoxBody","value":"BoxBody {  }","parent":null,"children":[{"krate":0,"index":77}],"decl_id":null,"docs":" A boxed [`Body`] trait object.\n","sig":null,"attributes":[{"value":"/ A boxed [`Body`] trait object.","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/box_body.rs","byte_start":11819,"byte_end":11853,"line_start":9,"line_end":9,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/box_body.rs","byte_start":12030,"byte_end":12033,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<BoxBody<D, E>>::new","value":"pub fn new<B>(B) -> Self where B: Body<Data = D, Error = D> + Send + Sync +\n'static, D: Buf","parent":null,"children":[],"decl_id":null,"docs":" Create a new `BoxBody`.\n","sig":null,"attributes":[{"value":"/ Create a new `BoxBody`.","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/box_body.rs","byte_start":11991,"byte_end":12018,"line_start":15,"line_end":15,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":258},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/map_data.rs","byte_start":13325,"byte_end":13332,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"MapData","qualname":"::combinators::map_data::MapData","value":"MapData {  }","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":262}],"decl_id":null,"docs":" Body returned by the [`map_data`] combinator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/map_data.rs","byte_start":13576,"byte_end":13583,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MapData<B, F>>::get_ref","value":"pub fn get_ref(&Self) -> &B","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the inner body\n","sig":null,"attributes":[{"value":"/ Get a reference to the inner body","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/map_data.rs","byte_start":13527,"byte_end":13564,"line_start":27,"line_end":27,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/map_data.rs","byte_start":13687,"byte_end":13694,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MapData<B, F>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut B","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner body\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner body","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/map_data.rs","byte_start":13630,"byte_end":13675,"line_start":32,"line_end":32,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/map_data.rs","byte_start":13817,"byte_end":13828,"line_start":38,"line_end":38,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<MapData<B, F>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut B>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned mutable reference to the inner body\n","sig":null,"attributes":[{"value":"/ Get a pinned mutable reference to the inner body","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/map_data.rs","byte_start":13753,"byte_end":13805,"line_start":37,"line_end":37,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/map_data.rs","byte_start":13964,"byte_end":13974,"line_start":43,"line_end":43,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<MapData<B, F>>::into_inner","value":"pub fn into_inner(Self) -> B","parent":null,"children":[],"decl_id":null,"docs":" Consume `self`, returning the inner body\n","sig":null,"attributes":[{"value":"/ Consume `self`, returning the inner body","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/map_data.rs","byte_start":13908,"byte_end":13952,"line_start":42,"line_end":42,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":314},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/map_err.rs","byte_start":15207,"byte_end":15213,"line_start":13,"line_end":13,"column_start":16,"column_end":22},"name":"MapErr","qualname":"::combinators::map_err::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":318}],"decl_id":null,"docs":" Body returned by the [`map_err`] combinator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/map_err.rs","byte_start":15456,"byte_end":15463,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MapErr<B, F>>::get_ref","value":"pub fn get_ref(&Self) -> &B","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the inner body\n","sig":null,"attributes":[{"value":"/ Get a reference to the inner body","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/map_err.rs","byte_start":15407,"byte_end":15444,"line_start":26,"line_end":26,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/map_err.rs","byte_start":15567,"byte_end":15574,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MapErr<B, F>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut B","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner body\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner body","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/map_err.rs","byte_start":15510,"byte_end":15555,"line_start":31,"line_end":31,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/map_err.rs","byte_start":15697,"byte_end":15708,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<MapErr<B, F>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut B>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned mutable reference to the inner body\n","sig":null,"attributes":[{"value":"/ Get a pinned mutable reference to the inner body","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/map_err.rs","byte_start":15633,"byte_end":15685,"line_start":36,"line_end":36,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/map_err.rs","byte_start":15844,"byte_end":15854,"line_start":42,"line_end":42,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<MapErr<B, F>>::into_inner","value":"pub fn into_inner(Self) -> B","parent":null,"children":[],"decl_id":null,"docs":" Consume `self`, returning the inner body\n","sig":null,"attributes":[{"value":"/ Consume `self`, returning the inner body","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/map_err.rs","byte_start":15788,"byte_end":15832,"line_start":41,"line_end":41,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":168},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":1106,"byte_end":1110,"line_start":41,"line_end":41,"column_start":11,"column_end":15},"name":"Body","qualname":"::Body","value":"Body","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":183}],"decl_id":null,"docs":" Trait representing a streaming body of a Request or Response.","sig":null,"attributes":[{"value":"/ Trait representing a streaming body of a Request or Response.","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":645,"byte_end":710,"line_start":33,"line_end":33,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":711,"byte_end":714,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Data is streamed via the `poll_data` function, which asynchronously yields `T: Buf` values. The","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":715,"byte_end":814,"line_start":35,"line_end":35,"column_start":1,"column_end":100}},{"value":"/ `size_hint` function provides insight into the total number of bytes that will be streamed.","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":815,"byte_end":910,"line_start":36,"line_end":36,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":911,"byte_end":914,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ The `poll_trailers` function returns an optional set of trailers used to finalize the request /","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":915,"byte_end":1014,"line_start":38,"line_end":38,"column_start":1,"column_end":100}},{"value":"/ response exchange. This is mostly used when using the HTTP/2.0 protocol.","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":1015,"byte_end":1091,"line_start":39,"line_end":39,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":1092,"byte_end":1095,"line_start":40,"line_end":40,"column_start":1,"column_end":4}}]},{"kind":"Type","id":{"krate":0,"index":169},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":1160,"byte_end":1164,"line_start":43,"line_end":43,"column_start":10,"column_end":14},"name":"Data","qualname":"::Body::Data","value":"type Data: Buf;","parent":{"krate":0,"index":168},"children":[],"decl_id":null,"docs":" Values yielded by the `Body`.\n","sig":null,"attributes":[{"value":"/ Values yielded by the `Body`.","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":1117,"byte_end":1150,"line_start":42,"line_end":42,"column_start":5,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":170},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":1232,"byte_end":1237,"line_start":46,"line_end":46,"column_start":10,"column_end":15},"name":"Error","qualname":"::Body::Error","value":"type Error;","parent":{"krate":0,"index":168},"children":[],"decl_id":null,"docs":" The error type this `Body` might generate.\n","sig":null,"attributes":[{"value":"/ The error type this `Body` might generate.","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":1176,"byte_end":1222,"line_start":45,"line_end":45,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":1312,"byte_end":1321,"line_start":49,"line_end":49,"column_start":8,"column_end":17},"name":"poll_data","qualname":"::Body::poll_data","value":"pub fn poll_data(Pin<&mut Self>, &mut Context)\n-> Poll<Option<Result<Self::Data, Self::Error>>>","parent":{"krate":0,"index":168},"children":[],"decl_id":null,"docs":" Attempt to pull out the next data buffer of this stream.\n","sig":null,"attributes":[{"value":"/ Attempt to pull out the next data buffer of this stream.","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":1244,"byte_end":1304,"line_start":48,"line_end":48,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":1597,"byte_end":1610,"line_start":57,"line_end":57,"column_start":8,"column_end":21},"name":"poll_trailers","qualname":"::Body::poll_trailers","value":"pub fn poll_trailers(Pin<&mut Self>, &mut Context)\n-> Poll<Result<Option<HeaderMap>, Self::Error>>","parent":{"krate":0,"index":168},"children":[],"decl_id":null,"docs":" Poll for an optional **single** `HeaderMap` of trailers.","sig":null,"attributes":[{"value":"/ Poll for an optional **single** `HeaderMap` of trailers.","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":1444,"byte_end":1504,"line_start":54,"line_end":54,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":1509,"byte_end":1512,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This function should only be called once `poll_data` returns `None`.","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":1517,"byte_end":1589,"line_start":56,"line_end":56,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":2050,"byte_end":2063,"line_start":69,"line_end":69,"column_start":8,"column_end":21},"name":"is_end_stream","qualname":"::Body::is_end_stream","value":"pub fn is_end_stream(&Self) -> bool","parent":{"krate":0,"index":168},"children":[],"decl_id":null,"docs":" Returns `true` when the end of stream has been reached.","sig":null,"attributes":[{"value":"/ Returns `true` when the end of stream has been reached.","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":1732,"byte_end":1791,"line_start":62,"line_end":62,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":1796,"byte_end":1799,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ An end of stream means that both `poll_data` and `poll_trailers` will","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":1804,"byte_end":1877,"line_start":64,"line_end":64,"column_start":5,"column_end":78}},{"value":"/ return `None`.","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":1882,"byte_end":1900,"line_start":65,"line_end":65,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":1905,"byte_end":1908,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ A return value of `false` **does not** guarantee that a value will be","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":1913,"byte_end":1986,"line_start":67,"line_end":67,"column_start":5,"column_end":78}},{"value":"/ returned from `poll_stream` or `poll_trailers`.","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":1991,"byte_end":2042,"line_start":68,"line_end":68,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":2319,"byte_end":2328,"line_start":77,"line_end":77,"column_start":8,"column_end":17},"name":"size_hint","qualname":"::Body::size_hint","value":"pub fn size_hint(&Self) -> SizeHint","parent":{"krate":0,"index":168},"children":[],"decl_id":null,"docs":" Returns the bounds on the remaining length of the stream.","sig":null,"attributes":[{"value":"/ Returns the bounds on the remaining length of the stream.","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":2106,"byte_end":2167,"line_start":73,"line_end":73,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":2172,"byte_end":2175,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ When the **exact** remaining length of the stream is known, the upper bound will be set and","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":2180,"byte_end":2275,"line_start":75,"line_end":75,"column_start":5,"column_end":100}},{"value":"/ will equal the lower bound.","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":2280,"byte_end":2311,"line_start":76,"line_end":76,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":2457,"byte_end":2461,"line_start":82,"line_end":82,"column_start":8,"column_end":12},"name":"data","qualname":"::Body::data","value":"pub fn data(&mut Self) -> Data<, Self> where Self: Unpin + Sized","parent":{"krate":0,"index":168},"children":[],"decl_id":null,"docs":" Returns future that resolves to next data chunk, if any.\n","sig":null,"attributes":[{"value":"/ Returns future that resolves to next data chunk, if any.","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":2389,"byte_end":2449,"line_start":81,"line_end":81,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":2627,"byte_end":2635,"line_start":90,"line_end":90,"column_start":8,"column_end":16},"name":"trailers","qualname":"::Body::trailers","value":"pub fn trailers(&mut Self) -> Trailers<, Self> where Self: Unpin + Sized","parent":{"krate":0,"index":168},"children":[],"decl_id":null,"docs":" Returns future that resolves to trailers, if any.\n","sig":null,"attributes":[{"value":"/ Returns future that resolves to trailers, if any.","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":2566,"byte_end":2619,"line_start":89,"line_end":89,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":2809,"byte_end":2817,"line_start":98,"line_end":98,"column_start":8,"column_end":16},"name":"map_data","qualname":"::Body::map_data","value":"pub fn map_data<F, B>(Self, F) -> MapData<Self, F> where Self: Sized,\nF: FnMut(Self::Data) -> B, B: Buf","parent":{"krate":0,"index":168},"children":[],"decl_id":null,"docs":" Maps this body's data value to a different value.\n","sig":null,"attributes":[{"value":"/ Maps this body's data value to a different value.","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":2748,"byte_end":2801,"line_start":97,"line_end":97,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":3047,"byte_end":3054,"line_start":108,"line_end":108,"column_start":8,"column_end":15},"name":"map_err","qualname":"::Body::map_err","value":"pub fn map_err<F, E>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: FnMut(Self::Error) -> E","parent":{"krate":0,"index":168},"children":[],"decl_id":null,"docs":" Maps this body's error value to a different value.\n","sig":null,"attributes":[{"value":"/ Maps this body's error value to a different value.","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":2985,"byte_end":3039,"line_start":107,"line_end":107,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":3258,"byte_end":3263,"line_start":117,"line_end":117,"column_start":8,"column_end":13},"name":"boxed","qualname":"::Body::boxed","value":"pub fn boxed(Self) -> BoxBody<Self::Data, Self::Error> where Self: Sized +\nSend + Sync + 'static","parent":{"krate":0,"index":168},"children":[],"decl_id":null,"docs":" Turn this body into a boxed trait object.\n","sig":null,"attributes":[{"value":"/ Turn this body into a boxed trait object.","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":3205,"byte_end":3250,"line_start":116,"line_end":116,"column_start":5,"column_end":50}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/empty.rs","byte_start":7454,"byte_end":7459,"line_start":17,"line_end":17,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/empty.rs","byte_start":7577,"byte_end":7582,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/empty.rs","byte_start":8035,"byte_end":8040,"line_start":45,"line_end":45,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/empty.rs","byte_start":8179,"byte_end":8184,"line_start":51,"line_end":51,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/empty.rs","byte_start":8303,"byte_end":8308,"line_start":59,"line_end":59,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/empty.rs","byte_start":8429,"byte_end":8434,"line_start":67,"line_end":67,"column_start":18,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/next.rs","byte_start":8757,"byte_end":8761,"line_start":12,"line_end":12,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/next.rs","byte_start":9216,"byte_end":9224,"line_start":25,"line_end":25,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":9686,"byte_end":9694,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/box_body.rs","byte_start":11971,"byte_end":11978,"line_start":14,"line_end":14,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/box_body.rs","byte_start":12243,"byte_end":12250,"line_start":27,"line_end":27,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/box_body.rs","byte_start":12394,"byte_end":12401,"line_start":33,"line_end":33,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/map_data.rs","byte_start":13407,"byte_end":13414,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/map_data.rs","byte_start":14040,"byte_end":14047,"line_start":48,"line_end":48,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/map_err.rs","byte_start":15288,"byte_end":15294,"line_start":20,"line_end":20,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/map_err.rs","byte_start":15919,"byte_end":15925,"line_start":47,"line_end":47,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":4081,"byte_end":4084,"line_start":152,"line_end":152,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":4863,"byte_end":4866,"line_start":183,"line_end":183,"column_start":41,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":5505,"byte_end":5512,"line_start":210,"line_end":210,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":6287,"byte_end":6295,"line_start":243,"line_end":243,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":375,"byte_end":386,"line_start":20,"line_end":20,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":64}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/empty.rs","byte_start":7454,"byte_end":7459,"line_start":17,"line_end":17,"column_start":9,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":15},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/empty.rs","byte_start":7577,"byte_end":7582,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":15},"to":{"krate":0,"index":168}},{"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/empty.rs","byte_start":8035,"byte_end":8040,"line_start":45,"line_end":45,"column_start":24,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":15},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/empty.rs","byte_start":8179,"byte_end":8184,"line_start":51,"line_end":51,"column_start":21,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":15},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/empty.rs","byte_start":8303,"byte_end":8308,"line_start":59,"line_end":59,"column_start":19,"column_end":24},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":15},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/empty.rs","byte_start":8429,"byte_end":8434,"line_start":67,"line_end":67,"column_start":18,"column_end":23},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":15},"to":{"krate":2,"index":2091}},{"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/next.rs","byte_start":8757,"byte_end":8761,"line_start":12,"line_end":12,"column_start":47,"column_end":51},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":224},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/next.rs","byte_start":9216,"byte_end":9224,"line_start":25,"line_end":25,"column_start":47,"column_end":55},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":233},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/size_hint.rs","byte_start":9686,"byte_end":9694,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":242},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/box_body.rs","byte_start":11971,"byte_end":11978,"line_start":14,"line_end":14,"column_start":12,"column_end":19},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":74},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/box_body.rs","byte_start":12243,"byte_end":12250,"line_start":27,"line_end":27,"column_start":27,"column_end":34},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":74},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/box_body.rs","byte_start":12394,"byte_end":12401,"line_start":33,"line_end":33,"column_start":21,"column_end":28},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":74},"to":{"krate":0,"index":168}},{"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/map_data.rs","byte_start":13407,"byte_end":13414,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":258},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/map_data.rs","byte_start":14040,"byte_end":14047,"line_start":48,"line_end":48,"column_start":25,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":258},"to":{"krate":0,"index":168}},{"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/map_err.rs","byte_start":15288,"byte_end":15294,"line_start":20,"line_end":20,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/combinators/map_err.rs","byte_start":15919,"byte_end":15925,"line_start":47,"line_end":47,"column_start":24,"column_end":30},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":314},"to":{"krate":0,"index":168}},{"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":4081,"byte_end":4084,"line_start":152,"line_end":152,"column_start":18,"column_end":21},"kind":{"Impl":{"id":16}},"from":{"krate":2,"index":34796},"to":{"krate":0,"index":168}},{"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":4863,"byte_end":4866,"line_start":183,"line_end":183,"column_start":41,"column_end":44},"kind":{"Impl":{"id":17}},"from":{"krate":5,"index":105},"to":{"krate":0,"index":168}},{"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":5505,"byte_end":5512,"line_start":210,"line_end":210,"column_start":30,"column_end":37},"kind":{"Impl":{"id":18}},"from":{"krate":17,"index":996},"to":{"krate":0,"index":168}},{"span":{"file_name":"/Users/admin/.cargo/registry/src/github.com-1ecc6299db9ec823/http-body-0.4.1/src/lib.rs","byte_start":6287,"byte_end":6295,"line_start":243,"line_end":243,"column_start":30,"column_end":38},"kind":{"Impl":{"id":19}},"from":{"krate":17,"index":1107},"to":{"krate":0,"index":168}}]}